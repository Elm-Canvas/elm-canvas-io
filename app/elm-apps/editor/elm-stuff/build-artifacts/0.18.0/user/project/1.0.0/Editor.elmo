var _user$project$Editor$initialModel = {liveCodeId: '', websocketHost: '', source: '', compiled: '', canCompile: false};
var _user$project$Editor$compileLiveCode = F2(
	function (websocketHost, source) {
		var payload = A2(
			_elm_lang$core$Json_Encode$encode,
			0,
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'action',
						_1: _elm_lang$core$Json_Encode$string('compile')
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'source',
							_1: _elm_lang$core$Json_Encode$string(source)
						},
						_1: {ctor: '[]'}
					}
				}));
		return A2(
			_elm_lang$websocket$WebSocket$send,
			websocketHost,
			A2(_elm_lang$core$Debug$log, 'setLiveCodeId', payload));
	});
var _user$project$Editor$setLiveCodeId = F2(
	function (websocketHost, liveCodeId) {
		var payload = A2(
			_elm_lang$core$Json_Encode$encode,
			0,
			_elm_lang$core$Json_Encode$object(
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'action',
						_1: _elm_lang$core$Json_Encode$string('set')
					},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'id',
							_1: _elm_lang$core$Json_Encode$string(liveCodeId)
						},
						_1: {ctor: '[]'}
					}
				}));
		return A2(
			_elm_lang$websocket$WebSocket$send,
			websocketHost,
			A2(_elm_lang$core$Debug$log, 'setLiveCodeId', payload));
	});
var _user$project$Editor$init = function (flags) {
	return {
		ctor: '_Tuple2',
		_0: _elm_lang$core$Native_Utils.update(
			_user$project$Editor$initialModel,
			{liveCodeId: flags.id, websocketHost: flags.ws}),
		_1: A2(_user$project$Editor$setLiveCodeId, flags.ws, flags.id)
	};
};
var _user$project$Editor$refreshFrames = _elm_lang$core$Native_Platform.outgoingPort(
	'refreshFrames',
	function (v) {
		return null;
	});
var _user$project$Editor$Flags = F2(
	function (a, b) {
		return {id: a, ws: b};
	});
var _user$project$Editor$Model = F5(
	function (a, b, c, d, e) {
		return {liveCodeId: a, websocketHost: b, source: c, compiled: d, canCompile: e};
	});
var _user$project$Editor$SourceChanged = function (a) {
	return {ctor: 'SourceChanged', _0: a};
};
var _user$project$Editor$Incoming = function (a) {
	return {ctor: 'Incoming', _0: a};
};
var _user$project$Editor$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$websocket$WebSocket$listen,
				A2(_elm_lang$core$Debug$log, 'websocketHost', model.websocketHost),
				_user$project$Editor$Incoming),
			_1: {ctor: '[]'}
		});
};
var _user$project$Editor$BeginCompile = {ctor: 'BeginCompile'};
var _user$project$Editor$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$textarea,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(model.source),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Editor$SourceChanged),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('editor'),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Editor$BeginCompile),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Compile'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Compiled Output'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$iframe,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$src(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'/live/',
										A2(_elm_lang$core$Basics_ops['++'], model.liveCodeId, '/compiled'))),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Editor$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _user$project$Editor$Compiled = {ctor: 'Compiled'};
var _user$project$Editor$Source = function (a) {
	return {ctor: 'Source', _0: a};
};
var _user$project$Editor$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'BeginCompile':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{canCompile: false}),
					_1: A2(_user$project$Editor$compileLiveCode, model.websocketHost, model.source)
				};
			case 'Incoming':
				var _p2 = _p0._0;
				var action = A2(
					_elm_lang$core$Debug$log,
					'Incoming',
					A2(
						_elm_lang$core$Result$withDefault,
						'',
						A2(
							_elm_lang$core$Json_Decode$decodeString,
							A2(_elm_lang$core$Json_Decode$field, 'action', _elm_lang$core$Json_Decode$string),
							_p2)));
				var incomingMsg = function () {
					if (_elm_lang$core$Native_Utils.eq(action, 'source')) {
						var source = A2(
							_elm_lang$core$Result$withDefault,
							'',
							A2(
								_elm_lang$core$Json_Decode$decodeString,
								A2(_elm_lang$core$Json_Decode$field, 'source', _elm_lang$core$Json_Decode$string),
								_p2));
						return _user$project$Editor$Source(source);
					} else {
						if (_elm_lang$core$Native_Utils.eq(action, 'compiled')) {
							return _user$project$Editor$Compiled;
						} else {
							return _user$project$Editor$Error('unknown message action');
						}
					}
				}();
				var _p1 = incomingMsg;
				switch (_p1.ctor) {
					case 'Source':
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{source: _p1._0}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 'Compiled':
						return {
							ctor: '_Tuple2',
							_0: model,
							_1: _user$project$Editor$refreshFrames(
								{ctor: '_Tuple0'})
						};
					default:
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{source: _p0._0, canCompile: true}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Editor$main = _elm_lang$html$Html$programWithFlags(
	{init: _user$project$Editor$init, update: _user$project$Editor$update, view: _user$project$Editor$view, subscriptions: _user$project$Editor$subscriptions})(
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (id) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (ws) {
					return _elm_lang$core$Json_Decode$succeed(
						{id: id, ws: ws});
				},
				A2(_elm_lang$core$Json_Decode$field, 'ws', _elm_lang$core$Json_Decode$string));
		},
		A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string)));
